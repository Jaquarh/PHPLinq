[
  {
    "Id": "590728",
    "ThreadId": "252271",
    "Html": "\r\n<p>Hi,</p>\r\n<p>firstOrdefault method seems not to work.</p>\r\n<p>I've tried the following in '01-simple.php' example and it returns nothing (not NULL, just nothing)</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$result = from(<span style=\"color:#a31515\">'$n'</span>)-&gt;in($names)-&gt;firstOrDefault(<span style=\"color:#a31515\">'$n =&gt; $n == &quot;Joe&quot;'</span>);\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>May be I do something wrong?</p>\r\n<p>Thank you.</p>\r\n",
    "PostedDate": "2011-04-02T13:56:03.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "591799",
    "ThreadId": "252271",
    "Html": "<p>Currently, the \"default\" for a string is null. Should this be \"\"?</p>",
    "PostedDate": "2011-04-04T23:12:15.79-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "592226",
    "ThreadId": "252271",
    "Html": "<p>No-no-no! It should remain null.&nbsp;</p>\r\n<p>Actually I was wrong in first message - functions DO return something, but something strange. Look at following code (and remarks):</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>&lt;?php\r\n\r\n<span style=\"color: green;\">/** PHPLinq_LinqToObjects */</span>\r\n<span style=\"color: blue;\">require_once</span> <span style=\"color: #a31515;\">'PHPLinq/LinqToObjects.php'</span>;\r\n\r\n<span style=\"color: blue;\">class</span> TestClass\r\n{\r\n    <span style=\"color: blue;\">public</span> $var1, $var2;\r\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">function</span> __construct($v1, $v2)\r\n    {\r\n        $this-&gt;var1 = $v1;\r\n        $this-&gt;var2 = $v2;\r\n    }\r\n}\r\n\r\n$members = <span style=\"color: blue;\">array</span>();\r\n<span style=\"color: green;\">//add two members to array</span>\r\n$members[] = <span style=\"color: blue;\">new</span> TestClass(<span style=\"color: #a31515;\">\"USD\"</span>, <span style=\"color: #a31515;\">\"CHF\"</span>);\r\n$members[] = <span style=\"color: blue;\">new</span> TestClass(<span style=\"color: #a31515;\">\"GBP\"</span>, <span style=\"color: #a31515;\">\"JPY\"</span>);\r\n<span style=\"color: green;\">//print array - it's shown as expected, with \"USD-CHF\" and \"GBP-JPY\" pairs</span>\r\nvar_dump($members);\r\n<span style=\"color: blue;\">echo</span>(<span style=\"color: #a31515;\">\"&lt;br /&gt;\"</span>);\r\n<span style=\"color: green;\">//try any</span>\r\n$result = from(<span style=\"color: #a31515;\">'$m'</span>)-&gt;in($members)-&gt;any(<span style=\"color: #a31515;\">'$m-&gt;var1 = \"GBP\"'</span>);\r\n<span style=\"color: green;\">//works ok - \"true\" is shown</span>\r\nvar_dump($result);\r\n<span style=\"color: blue;\">echo</span>(<span style=\"color: #a31515;\">\"&lt;br /&gt;\"</span>);\r\n<span style=\"color: green;\">//try firstOrdefault</span>\r\n$result = from(<span style=\"color: #a31515;\">'$m'</span>)-&gt;in($members)-&gt;firstOrDefault(<span style=\"color: #a31515;\">'$m-&gt;var1 = \"GBP\"'</span>);\r\n<span style=\"color: green;\">//I expect to see the object, but string(3) \"GBP\" is shown instead</span>\r\nvar_dump($result);\r\n<span style=\"color: blue;\">echo</span>(<span style=\"color: #a31515;\">\"&lt;br /&gt;\"</span>);\r\n<span style=\"color: green;\">//try where</span>\r\n$result = from(<span style=\"color: #a31515;\">'$m'</span>)-&gt;in($members)-&gt;where(<span style=\"color: #a31515;\">'$m-&gt;var1 == \"GBP\"'</span>)-&gt;select(<span style=\"color: #a31515;\">'$m'</span>);\r\n<span style=\"color: green;\">//I expect to see only one object, but two objects with wrong currencies are shown - see results</span>\r\nvar_dump($result);\r\n<span style=\"color: blue;\">echo</span>(<span style=\"color: #a31515;\">\"&lt;br /&gt;\"</span>);\r\n\r\n<span style=\"color: green;\">//everything works with simple strings array BUT:</span>\r\n<span style=\"color: green;\">//it works when I use '=' in expression, if I use '==' results are wrong</span>\r\n$arr = <span style=\"color: blue;\">array</span>(<span style=\"color: #a31515;\">'one'</span>, <span style=\"color: #a31515;\">'two'</span>, <span style=\"color: #a31515;\">'three'</span>, <span style=\"color: #a31515;\">'four'</span>);\r\n$result = from(<span style=\"color: #a31515;\">'$m'</span>)-&gt;in($arr)-&gt;any(<span style=\"color: #a31515;\">'$m = \"two\"'</span>);\r\nvar_dump($result);\r\n<span style=\"color: blue;\">echo</span>(<span style=\"color: #a31515;\">\"&lt;br /&gt;\"</span>);\r\n$result = from(<span style=\"color: #a31515;\">'$m'</span>)-&gt;in($arr)-&gt;firstOrDefault(<span style=\"color: #a31515;\">'$m = \"two\"'</span>);\r\nvar_dump($result);\r\n<span style=\"color: blue;\">echo</span>(<span style=\"color: #a31515;\">\"&lt;br /&gt;\"</span>);\r\n?&gt;\r\n</pre>\r\n</div>\r\n</p>\r\n<p>And here are results:</p>\r\n<p><strong>array(2) { [0]=&gt; object(TestClass)#1 (2) { [\"var1\"]=&gt; string(3) \"USD\"  [\"var2\"]=&gt; string(3) \"CHF\" } [1]=&gt; object(TestClass)#2 (2) { [\"var1\"]=&gt;  string(3) \"GBP\" [\"var2\"]=&gt; string(3) \"JPY\" } } </strong><br /><strong>bool(true) </strong><br /><strong>string(3)  \"GBP\" </strong><br /><strong>array(2) { [0]=&gt; object(TestClass)#1 (2) { [\"var1\"]=&gt; string(3)  \"GBP\" [\"var2\"]=&gt; string(3) \"CHF\" } [1]=&gt; object(TestClass)#2 (2) {  [\"var1\"]=&gt; string(3) \"GBP\" [\"var2\"]=&gt; string(3) \"JPY\" } } </strong><br /><strong>bool(true) </strong><br /><strong>string(3) \"two\"</strong></p>\r\n<p>Something wrong with objects and with \"==\"</p>",
    "PostedDate": "2011-04-05T10:52:16.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]